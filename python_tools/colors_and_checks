#!/usr/bin/env python
# -*- coding: utf-8 -*-

__author__ = "rikrdo"
__copyright__ = "Copyright 2022, Bootcamp Cybersec "
__credits__ = ["rikrdo"]
__license__ = "GPL"
__version__ = "1.0.1"
__maintainer__ = "rikrdo"
__email__ = "rikrdo@rikrdo.es"
__status__ = "Production"

# required libraries

import sys
import os

def supports_color():
    """
    Returns True if the running system's terminal supports color, and False
    otherwise.
    """
    plat = sys.platform
    supported_platform = plat != 'Pocket PC' and (plat != 'win32' or 'ANSICON' in os.environ)
    # isatty is not always implemented, #6223.
    is_a_tty = hasattr(sys.stdout, 'isatty') and sys.stdout.isatty()
    return supported_platform and is_a_tty


class colors:
    HEADER  = '\033[95m' if supports_color() else ""
    OKBLUE  = '\033[94m' if supports_color() else ""
    OKCYAN  = '\033[96m' if supports_color() else ""
    OKGREEN = '\033[92m' if supports_color() else ""
    WARNING = '\033[93m' if supports_color() else ""
    FAIL    = '\033[91m' if supports_color() else ""
    ENDC    = '\033[0m'  if supports_color() else ""
    BOLD    = '\033[1m'  if supports_color() else ""
    UNDERLINE ='\033[4m' if supports_color() else ""

# TAGS ex: print(f"{WARN} Warning something")
INFO = f"{colors.BOLD}[i]{colors.ENDC}"                 if supports_color() else "[i]"
OK   = f"{colors.HEADER}[*]{colors.ENDC}"               if supports_color() else "[*]"
WARN = f"{colors.WARNING}[w]{colors.ENDC}"              if supports_color() else "[w]"
ERR  = f"{colors.BOLD}{colors.FAIL}[!]{colors.ENDC}"    if supports_color() else "[!]"